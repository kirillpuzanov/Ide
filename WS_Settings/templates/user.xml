<templateSet group="user">
  <template name="sc" value="import React from 'react';&#10;import { Text, View, StyleSheet } from 'react-native';&#10;import { useSafeAreaInsets } from 'react-native-safe-area-context';&#10;import { useDispatch } from 'react-redux';&#10;import { useFonts } from '../../constants/fonts';&#10;import { useColors } from '../../constants/colors';&#10;import { flexCenter } from '../../constants/values';&#10;&#10;export const SC = () =&gt; {&#10;  const Fonts = useFonts();&#10;  const Colors = useColors();&#10;  const dispatch = useDispatch();&#10;  const insets = useSafeAreaInsets();&#10;  return (&#10;    &lt;View style={[styles.screen, { backgroundColor: Colors.BG, paddingBottom: insets.bottom / 2 }]}&gt;&#10;      &lt;Text&gt;StartComponent&lt;/Text&gt;&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  screen: {&#10;    flex: 1,&#10;    ...flexCenter&#10;  },&#10;});" description="start_component" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ds" value="/**&#10;* this dock string&#10;*/" description="dock string" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="logg" value="console.log('------&gt;  =====&gt; ',  ); " description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fn" value="const someFunc = () =&gt; {&#10;&#10;};" description="base func" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ls" value="const [ useState, setUseState ] = useState();" description="useState" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>